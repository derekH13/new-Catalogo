/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function() {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst apiKey = 'fd937c0a';\nlet pesquisa = 'joker';\nconst paiGrid = document.querySelector('.grid');\nconst altaMarvel = document.querySelector('.marvel');\nconst altaHarry = document.querySelector('.harry');\nconst altaStar = document.querySelector('.star');\nconst altaAnime = document.querySelector('.anime');\nconst altaDisney = document.querySelector('.disney');\nconst btnPesquisar = document.querySelector('.botao');\nconst acao = document.querySelector('.acao');\nconst comedia = document.querySelector('.comedia');\nconst romance = document.querySelector('.romance');\nconst terror = document.querySelector('.terror');\nfunction requisicao(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const response = yield fetch(url);\n            //confirmando se a requisição deu certo\n            if (!response.ok) {\n                throw new Error('deu ruim');\n            }\n            const data = yield response.json();\n            return data.Search;\n        }\n        catch (error) {\n            throw new Error(`Então ${error}`);\n        }\n    });\n}\nrequisicao(`https://www.omdbapi.com/?s=${pesquisa}&apikey=${apiKey}`)\n    .then(data => card(data, paiGrid))\n    .catch(error => console.error());\n//criando elemento e definindo classes\nfunction createEl(div, classe) {\n    const d = document.createElement(div);\n    const classes = classe.split(' ');\n    for (const c of classes) {\n        d.classList.add(c);\n    }\n    return d;\n}\n//criar card a partir da pesquisa\nfunction card(array, pai) {\n    //limpa o catalogo\n    const c = paiGrid.querySelectorAll('.card');\n    for (const item of c) {\n        item.remove();\n    }\n    //acresenta\n    for (const item of array) {\n        const card = createEl('div', 'card');\n        const imagem = createEl('img', 'card-img-top');\n        const cardBody = createEl('div', 'card-body');\n        const titulo = createEl('h2', 'card-text');\n        const spin = document.querySelector('.spinner-border');\n        imagem.src = item['Poster'];\n        titulo.innerHTML = item['Title'];\n        cardBody.append(titulo);\n        card.append(imagem);\n        card.append(cardBody);\n        card.addEventListener('click', () => preencherDados(item));\n        pai.append(card);\n        spin.style.display = 'none';\n    }\n}\n//criar card a partir do alta\nfunction cardAlta(array, pai) {\n    for (let i = 0; i < 4; i++) {\n        const card = createEl('div', 'card');\n        const imagem = createEl('img', 'card-img-top');\n        const cardBody = createEl('div', 'card-body');\n        const titulo = createEl('h2', 'card-text');\n        imagem.src = array[i].Poster;\n        titulo.innerHTML = array[i].Title;\n        cardBody.append(titulo);\n        card.append(imagem);\n        card.append(cardBody);\n        card.addEventListener('click', () => preencherDados(array[i]));\n        pai.append(card);\n    }\n}\n//em alta\nfunction alta(filme) {\n    const containerAlta = document.querySelector('.cards-alta');\n    const todosCards = containerAlta.querySelectorAll('.card');\n    for (const t of todosCards) {\n        t.remove();\n    }\n    requisicao(`https://www.omdbapi.com/?s=${filme}&apikey=${apiKey}`)\n        .then(data => cardAlta(data, containerAlta));\n}\nfunction preencherDados(item) {\n    const x = document.getElementById('windown');\n    x.classList.toggle('active');\n    const v = document.querySelector('.voltar');\n    v.addEventListener('click', () => x.classList.remove('active'));\n    const wImagem = document.querySelector('#windown .flex .card img');\n    wImagem.src = item['Poster'];\n    const wTitulo = document.querySelector('#windown .flex .card .card-body h2');\n    wTitulo.innerHTML = item['Title'];\n}\n// ================= event ==========\naltaHarry.addEventListener('click', () => {\n    const op = document.querySelectorAll('.nav-alta .op');\n    for (const o of op) {\n        o.classList.remove('check');\n    }\n    altaHarry.classList.add('check');\n    alta('harry');\n});\naltaMarvel.addEventListener('click', () => {\n    const op = document.querySelectorAll('.nav-alta .op');\n    for (const o of op) {\n        o.classList.remove('check');\n    }\n    altaMarvel.classList.add('check');\n    alta('marvel');\n});\naltaStar.addEventListener('click', () => {\n    const op = document.querySelectorAll('.nav-alta .op');\n    for (const o of op) {\n        o.classList.remove('check');\n    }\n    altaStar.classList.add('check');\n    alta('star');\n});\naltaAnime.addEventListener('click', () => {\n    const op = document.querySelectorAll('.nav-alta .op');\n    for (const o of op) {\n        o.classList.remove('check');\n    }\n    altaAnime.classList.add('check');\n    alta('anime');\n});\naltaDisney.addEventListener('click', () => {\n    const op = document.querySelectorAll('.nav-alta .op');\n    for (const o of op) {\n        o.classList.remove('check');\n    }\n    altaDisney.classList.add('check');\n    alta('World of Disney');\n});\nbtnPesquisar.addEventListener('click', () => {\n    const inputPesquisar = document.querySelector('.form-control');\n    const valor = inputPesquisar.value;\n    requisicao(`https://www.omdbapi.com/?s=${valor}&apikey=${apiKey}`)\n        .then(data => card(data, paiGrid))\n        .catch(error => console.error());\n});\nacao.addEventListener('click', () => {\n    requisicao(`https://www.omdbapi.com/?s='acao'&apikey=${apiKey}`)\n        .then(data => card(data, paiGrid))\n        .catch(error => console.error());\n});\nterror.addEventListener('click', () => {\n    requisicao(`https://www.omdbapi.com/?s='terror'&apikey=${apiKey}`)\n        .then(data => card(data, paiGrid))\n        .catch(error => console.error());\n});\nromance.addEventListener('click', () => {\n    requisicao(`https://www.omdbapi.com/?s='romance'&apikey=${apiKey}`)\n        .then(data => card(data, paiGrid))\n        .catch(error => console.error());\n});\ncomedia.addEventListener('click', () => {\n    requisicao(`https://www.omdbapi.com/?s='comedia'&apikey=${apiKey}`)\n        .then(data => card(data, paiGrid))\n        .catch(error => console.error());\n});\ndocument.addEventListener('click', ({ target }) => {\n});\nalta('anime');\n\n\n//# sourceURL=webpack://aula-3/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;